/*
 * generated by Xtext 2.23.0
 */
grammar InternalUnoDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.gameuno.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.gameuno.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.gameuno.services.UnoDslGrammarAccess;

}
@parser::members {
	private UnoDslGrammarAccess grammarAccess;

	public void setGrammarAccess(UnoDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleUnoDsl
entryRuleUnoDsl
:
{ before(grammarAccess.getUnoDslRule()); }
	 ruleUnoDsl
{ after(grammarAccess.getUnoDslRule()); } 
	 EOF 
;

// Rule UnoDsl
ruleUnoDsl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnoDslAccess().getGroup()); }
		(rule__UnoDsl__Group__0)
		{ after(grammarAccess.getUnoDslAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegleJeu
entryRuleRegleJeu
:
{ before(grammarAccess.getRegleJeuRule()); }
	 ruleRegleJeu
{ after(grammarAccess.getRegleJeuRule()); } 
	 EOF 
;

// Rule RegleJeu
ruleRegleJeu 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegleJeuAccess().getGroup()); }
		(rule__RegleJeu__Group__0)
		{ after(grammarAccess.getRegleJeuAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExigence
entryRuleExigence
:
{ before(grammarAccess.getExigenceRule()); }
	 ruleExigence
{ after(grammarAccess.getExigenceRule()); } 
	 EOF 
;

// Rule Exigence
ruleExigence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExigenceAccess().getGroup()); }
		(rule__Exigence__Group__0)
		{ after(grammarAccess.getExigenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpr1
entryRuleExpr1
:
{ before(grammarAccess.getExpr1Rule()); }
	 ruleExpr1
{ after(grammarAccess.getExpr1Rule()); } 
	 EOF 
;

// Rule Expr1
ruleExpr1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpr1Access().getAlternatives()); }
		(rule__Expr1__Alternatives)
		{ after(grammarAccess.getExpr1Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLinker1
entryRuleLinker1
:
{ before(grammarAccess.getLinker1Rule()); }
	 ruleLinker1
{ after(grammarAccess.getLinker1Rule()); } 
	 EOF 
;

// Rule Linker1
ruleLinker1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinker1Access().getAlternatives()); }
		(rule__Linker1__Alternatives)
		{ after(grammarAccess.getLinker1Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLinker2
entryRuleLinker2
:
{ before(grammarAccess.getLinker2Rule()); }
	 ruleLinker2
{ after(grammarAccess.getLinker2Rule()); } 
	 EOF 
;

// Rule Linker2
ruleLinker2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinker2Access().getAlternatives()); }
		(rule__Linker2__Alternatives)
		{ after(grammarAccess.getLinker2Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLinker3
entryRuleLinker3
:
{ before(grammarAccess.getLinker3Rule()); }
	 ruleLinker3
{ after(grammarAccess.getLinker3Rule()); } 
	 EOF 
;

// Rule Linker3
ruleLinker3 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinker3Access().getAlternatives()); }
		(rule__Linker3__Alternatives)
		{ after(grammarAccess.getLinker3Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpr2
entryRuleExpr2
:
{ before(grammarAccess.getExpr2Rule()); }
	 ruleExpr2
{ after(grammarAccess.getExpr2Rule()); } 
	 EOF 
;

// Rule Expr2
ruleExpr2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpr2Access().getAlternatives()); }
		(rule__Expr2__Alternatives)
		{ after(grammarAccess.getExpr2Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCarte
entryRuleCarte
:
{ before(grammarAccess.getCarteRule()); }
	 ruleCarte
{ after(grammarAccess.getCarteRule()); } 
	 EOF 
;

// Rule Carte
ruleCarte 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCarteAccess().getAlternatives()); }
		(rule__Carte__Alternatives)
		{ after(grammarAccess.getCarteAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCarteClassique
entryRuleCarteClassique
:
{ before(grammarAccess.getCarteClassiqueRule()); }
	 ruleCarteClassique
{ after(grammarAccess.getCarteClassiqueRule()); } 
	 EOF 
;

// Rule CarteClassique
ruleCarteClassique 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCarteClassiqueAccess().getGroup()); }
		(rule__CarteClassique__Group__0)
		{ after(grammarAccess.getCarteClassiqueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCarteActive
entryRuleCarteActive
:
{ before(grammarAccess.getCarteActiveRule()); }
	 ruleCarteActive
{ after(grammarAccess.getCarteActiveRule()); } 
	 EOF 
;

// Rule CarteActive
ruleCarteActive 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCarteActiveAccess().getGroup()); }
		(rule__CarteActive__Group__0)
		{ after(grammarAccess.getCarteActiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCarteNoire
entryRuleCarteNoire
:
{ before(grammarAccess.getCarteNoireRule()); }
	 ruleCarteNoire
{ after(grammarAccess.getCarteNoireRule()); } 
	 EOF 
;

// Rule CarteNoire
ruleCarteNoire 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCarteNoireAccess().getAlternatives()); }
		(rule__CarteNoire__Alternatives)
		{ after(grammarAccess.getCarteNoireAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCouleurCarte
entryRuleCouleurCarte
:
{ before(grammarAccess.getCouleurCarteRule()); }
	 ruleCouleurCarte
{ after(grammarAccess.getCouleurCarteRule()); } 
	 EOF 
;

// Rule CouleurCarte
ruleCouleurCarte 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCouleurCarteAccess().getAlternatives()); }
		(rule__CouleurCarte__Alternatives)
		{ after(grammarAccess.getCouleurCarteAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr1__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpr1Access().getLeJoueurKeyword_0()); }
		'le joueur'
		{ after(grammarAccess.getExpr1Access().getLeJoueurKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpr1Access().getJoueursKeyword_1()); }
		'joueurs'
		{ after(grammarAccess.getExpr1Access().getJoueursKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpr1Access().getLeJeuKeyword_2()); }
		'le jeu'
		{ after(grammarAccess.getExpr1Access().getLeJeuKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Linker1__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinker1Access().getDitInterceptionEtKeyword_0()); }
		'dit interception et '
		{ after(grammarAccess.getLinker1Access().getDitInterceptionEtKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getLinker1Access().getSuivantKeyword_1()); }
		'suivant'
		{ after(grammarAccess.getLinker1Access().getSuivantKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Linker2__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinker2Access().getPoseKeyword_0()); }
		'pose'
		{ after(grammarAccess.getLinker2Access().getPoseKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getLinker2Access().getPiocheKeyword_1()); }
		'pioche'
		{ after(grammarAccess.getLinker2Access().getPiocheKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getLinker2Access().getLimiteKeyword_2()); }
		'limite'
		{ after(grammarAccess.getLinker2Access().getLimiteKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getLinker2Access().getGagneKeyword_3()); }
		'gagne'
		{ after(grammarAccess.getLinker2Access().getGagneKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getLinker2Access().getTourneKeyword_4()); }
		'tourne'
		{ after(grammarAccess.getLinker2Access().getTourneKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getLinker2Access().getImposeKeyword_5()); }
		'impose'
		{ after(grammarAccess.getLinker2Access().getImposeKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getLinker2Access().getEchangeKeyword_6()); }
		'echange'
		{ after(grammarAccess.getLinker2Access().getEchangeKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getLinker2Access().getPasseKeyword_7()); }
		'passe'
		{ after(grammarAccess.getLinker2Access().getPasseKeyword_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Linker3__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinker3Access().getSiMemeCouleurKeyword_0()); }
		'si meme couleur'
		{ after(grammarAccess.getLinker3Access().getSiMemeCouleurKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getLinker3Access().getSiMemeNumeroKeyword_1()); }
		'si meme numero'
		{ after(grammarAccess.getLinker3Access().getSiMemeNumeroKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr2__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpr2Access().getSurLaPileTalonKeyword_0()); }
		'sur la pile-talon'
		{ after(grammarAccess.getExpr2Access().getSurLaPileTalonKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpr2Access().getDeLaPiochePileKeyword_1()); }
		'de la pioche-pile'
		{ after(grammarAccess.getExpr2Access().getDeLaPiochePileKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpr2Access().getLeTempsDeLaMancheKeyword_2()); }
		'le temps de la manche'
		{ after(grammarAccess.getExpr2Access().getLeTempsDeLaMancheKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpr2Access().getDansLeSensInverseKeyword_3()); }
		'dans le sens inverse'
		{ after(grammarAccess.getExpr2Access().getDansLeSensInverseKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpr2Access().getLesMainsKeyword_4()); }
		'les mains'
		{ after(grammarAccess.getExpr2Access().getLesMainsKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getExpr2Access().getSiPointsAccumules500Keyword_5()); }
		'si points accumules 500'
		{ after(grammarAccess.getExpr2Access().getSiPointsAccumules500Keyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getExpr2Access().getSiCartePiochEEleveeKeyword_6()); }
		'si carte pioch\u00E9e +elevee'
		{ after(grammarAccess.getExpr2Access().getSiCartePiochEEleveeKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getExpr2Access().getSesCartesAvecAutreJoueurKeyword_7()); }
		'ses cartes avec autre joueur'
		{ after(grammarAccess.getExpr2Access().getSesCartesAvecAutreJoueurKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getExpr2Access().getSonTourKeyword_8()); }
		'son tour'
		{ after(grammarAccess.getExpr2Access().getSonTourKeyword_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Carte__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCarteAccess().getCarteClassiqueParserRuleCall_0()); }
		ruleCarteClassique
		{ after(grammarAccess.getCarteAccess().getCarteClassiqueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCarteAccess().getCarteActiveParserRuleCall_1()); }
		ruleCarteActive
		{ after(grammarAccess.getCarteAccess().getCarteActiveParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCarteAccess().getGroup_2()); }
		(rule__Carte__Group_2__0)
		{ after(grammarAccess.getCarteAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CarteActive__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCarteActiveAccess().getCartePasserTourKeyword_0_0()); }
		'carte-passer-tour'
		{ after(grammarAccess.getCarteActiveAccess().getCartePasserTourKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCarteActiveAccess().getCartePlus2Keyword_0_1()); }
		'carte-plus-2'
		{ after(grammarAccess.getCarteActiveAccess().getCartePlus2Keyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCarteActiveAccess().getCarteInversionKeyword_0_2()); }
		'carte-inversion'
		{ after(grammarAccess.getCarteActiveAccess().getCarteInversionKeyword_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CarteNoire__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCarteNoireAccess().getCartePlus4Keyword_0()); }
		'carte-plus-4'
		{ after(grammarAccess.getCarteNoireAccess().getCartePlus4Keyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getCarteNoireAccess().getCarteJokerKeyword_1()); }
		'carte-joker'
		{ after(grammarAccess.getCarteNoireAccess().getCarteJokerKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getCarteNoireAccess().getCarteUnoKeyword_2()); }
		'carte-uno'
		{ after(grammarAccess.getCarteNoireAccess().getCarteUnoKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CouleurCarte__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCouleurCarteAccess().getRougeKeyword_0()); }
		'rouge'
		{ after(grammarAccess.getCouleurCarteAccess().getRougeKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getCouleurCarteAccess().getJauneKeyword_1()); }
		'jaune'
		{ after(grammarAccess.getCouleurCarteAccess().getJauneKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getCouleurCarteAccess().getBleuKeyword_2()); }
		'bleu'
		{ after(grammarAccess.getCouleurCarteAccess().getBleuKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getCouleurCarteAccess().getVertKeyword_3()); }
		'vert'
		{ after(grammarAccess.getCouleurCarteAccess().getVertKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnoDsl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnoDsl__Group__0__Impl
	rule__UnoDsl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnoDsl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnoDslAccess().getReglesKeyword_0()); }
	'regles:'
	{ after(grammarAccess.getUnoDslAccess().getReglesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnoDsl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnoDsl__Group__1__Impl
	rule__UnoDsl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnoDsl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnoDslAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getUnoDslAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnoDsl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnoDsl__Group__2__Impl
	rule__UnoDsl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnoDsl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnoDslAccess().getReglesAssignment_2()); }
	(rule__UnoDsl__ReglesAssignment_2)
	{ after(grammarAccess.getUnoDslAccess().getReglesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnoDsl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnoDsl__Group__3__Impl
	rule__UnoDsl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnoDsl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnoDslAccess().getGroup_3()); }
	(rule__UnoDsl__Group_3__0)*
	{ after(grammarAccess.getUnoDslAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnoDsl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnoDsl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnoDsl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnoDslAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getUnoDslAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnoDsl__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnoDsl__Group_3__0__Impl
	rule__UnoDsl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnoDsl__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnoDslAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getUnoDslAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnoDsl__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnoDsl__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnoDsl__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnoDslAccess().getReglesAssignment_3_1()); }
	(rule__UnoDsl__ReglesAssignment_3_1)
	{ after(grammarAccess.getUnoDslAccess().getReglesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegleJeu__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegleJeu__Group__0__Impl
	rule__RegleJeu__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegleJeuAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getRegleJeuAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegleJeu__Group__1__Impl
	rule__RegleJeu__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegleJeuAccess().getGroup_1()); }
	(rule__RegleJeu__Group_1__0)
	{ after(grammarAccess.getRegleJeuAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegleJeu__Group__2__Impl
	rule__RegleJeu__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegleJeuAccess().getGroup_2()); }
	(rule__RegleJeu__Group_2__0)
	{ after(grammarAccess.getRegleJeuAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegleJeu__Group__3__Impl
	rule__RegleJeu__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegleJeuAccess().getGroup_3()); }
	(rule__RegleJeu__Group_3__0)
	{ after(grammarAccess.getRegleJeuAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegleJeu__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegleJeuAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getRegleJeuAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegleJeu__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegleJeu__Group_1__0__Impl
	rule__RegleJeu__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegleJeuAccess().getNom_regleKeyword_1_0()); }
	'nom_regle:'
	{ after(grammarAccess.getRegleJeuAccess().getNom_regleKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegleJeu__Group_1__1__Impl
	rule__RegleJeu__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegleJeuAccess().getNameAssignment_1_1()); }
	(rule__RegleJeu__NameAssignment_1_1)
	{ after(grammarAccess.getRegleJeuAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegleJeu__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegleJeuAccess().getCommaKeyword_1_2()); }
	','
	{ after(grammarAccess.getRegleJeuAccess().getCommaKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegleJeu__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegleJeu__Group_2__0__Impl
	rule__RegleJeu__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegleJeuAccess().getDescriptionKeyword_2_0()); }
	'description:'
	{ after(grammarAccess.getRegleJeuAccess().getDescriptionKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegleJeu__Group_2__1__Impl
	rule__RegleJeu__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegleJeuAccess().getDescriptionAssignment_2_1()); }
	(rule__RegleJeu__DescriptionAssignment_2_1)
	{ after(grammarAccess.getRegleJeuAccess().getDescriptionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegleJeu__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegleJeuAccess().getCommaKeyword_2_2()); }
	','
	{ after(grammarAccess.getRegleJeuAccess().getCommaKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegleJeu__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegleJeu__Group_3__0__Impl
	rule__RegleJeu__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegleJeuAccess().getExigencesKeyword_3_0()); }
	'exigences:'
	{ after(grammarAccess.getRegleJeuAccess().getExigencesKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegleJeu__Group_3__1__Impl
	rule__RegleJeu__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegleJeuAccess().getLeftSquareBracketKeyword_3_1()); }
	'['
	{ after(grammarAccess.getRegleJeuAccess().getLeftSquareBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegleJeu__Group_3__2__Impl
	rule__RegleJeu__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegleJeuAccess().getGroup_3_2()); }
	(rule__RegleJeu__Group_3_2__0)*
	{ after(grammarAccess.getRegleJeuAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegleJeu__Group_3__3__Impl
	rule__RegleJeu__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegleJeuAccess().getExigenceAssignment_3_3()); }
	(rule__RegleJeu__ExigenceAssignment_3_3)
	{ after(grammarAccess.getRegleJeuAccess().getExigenceAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegleJeu__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegleJeuAccess().getRightSquareBracketKeyword_3_4()); }
	']'
	{ after(grammarAccess.getRegleJeuAccess().getRightSquareBracketKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegleJeu__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegleJeu__Group_3_2__0__Impl
	rule__RegleJeu__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegleJeuAccess().getExigenceAssignment_3_2_0()); }
	(rule__RegleJeu__ExigenceAssignment_3_2_0)
	{ after(grammarAccess.getRegleJeuAccess().getExigenceAssignment_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegleJeu__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegleJeuAccess().getCommaKeyword_3_2_1()); }
	','
	{ after(grammarAccess.getRegleJeuAccess().getCommaKeyword_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exigence__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exigence__Group__0__Impl
	rule__Exigence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExigenceAccess().getExpr1Assignment_0()); }
	(rule__Exigence__Expr1Assignment_0)
	{ after(grammarAccess.getExigenceAccess().getExpr1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exigence__Group__1__Impl
	rule__Exigence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExigenceAccess().getLinker1Assignment_1()); }
	(rule__Exigence__Linker1Assignment_1)?
	{ after(grammarAccess.getExigenceAccess().getLinker1Assignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exigence__Group__2__Impl
	rule__Exigence__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExigenceAccess().getLinker2Assignment_2()); }
	(rule__Exigence__Linker2Assignment_2)
	{ after(grammarAccess.getExigenceAccess().getLinker2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exigence__Group__3__Impl
	rule__Exigence__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExigenceAccess().getGroup_3()); }
	(rule__Exigence__Group_3__0)?
	{ after(grammarAccess.getExigenceAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exigence__Group__4__Impl
	rule__Exigence__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExigenceAccess().getLinker3Assignment_4()); }
	(rule__Exigence__Linker3Assignment_4)?
	{ after(grammarAccess.getExigenceAccess().getLinker3Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exigence__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExigenceAccess().getExpr2Assignment_5()); }
	(rule__Exigence__Expr2Assignment_5)?
	{ after(grammarAccess.getExigenceAccess().getExpr2Assignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exigence__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exigence__Group_3__0__Impl
	rule__Exigence__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExigenceAccess().getCarteAssignment_3_0()); }
	(rule__Exigence__CarteAssignment_3_0)
	{ after(grammarAccess.getExigenceAccess().getCarteAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exigence__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExigenceAccess().getGroup_3_1()); }
	(rule__Exigence__Group_3_1__0)*
	{ after(grammarAccess.getExigenceAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exigence__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exigence__Group_3_1__0__Impl
	rule__Exigence__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExigenceAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getExigenceAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exigence__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExigenceAccess().getCarteAssignment_3_1_1()); }
	(rule__Exigence__CarteAssignment_3_1_1)
	{ after(grammarAccess.getExigenceAccess().getCarteAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Carte__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Carte__Group_2__0__Impl
	rule__Carte__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Carte__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCarteAccess().getCarteAction_2_0()); }
	()
	{ after(grammarAccess.getCarteAccess().getCarteAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Carte__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Carte__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Carte__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCarteAccess().getCarteNoireParserRuleCall_2_1()); }
	ruleCarteNoire
	{ after(grammarAccess.getCarteAccess().getCarteNoireParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CarteClassique__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CarteClassique__Group__0__Impl
	rule__CarteClassique__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CarteClassique__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCarteClassiqueAccess().getCarteNumeroKeyword_0()); }
	'carte-numero-'
	{ after(grammarAccess.getCarteClassiqueAccess().getCarteNumeroKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CarteClassique__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CarteClassique__Group__1__Impl
	rule__CarteClassique__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CarteClassique__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCarteClassiqueAccess().getNumeroCarteAssignment_1()); }
	(rule__CarteClassique__NumeroCarteAssignment_1)
	{ after(grammarAccess.getCarteClassiqueAccess().getNumeroCarteAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CarteClassique__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CarteClassique__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CarteClassique__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCarteClassiqueAccess().getGroup_2()); }
	(rule__CarteClassique__Group_2__0)
	{ after(grammarAccess.getCarteClassiqueAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CarteClassique__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CarteClassique__Group_2__0__Impl
	rule__CarteClassique__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CarteClassique__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCarteClassiqueAccess().getCouleurKeyword_2_0()); }
	'-couleur-'
	{ after(grammarAccess.getCarteClassiqueAccess().getCouleurKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CarteClassique__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CarteClassique__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CarteClassique__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCarteClassiqueAccess().getCouleurAssignment_2_1()); }
	(rule__CarteClassique__CouleurAssignment_2_1)
	{ after(grammarAccess.getCarteClassiqueAccess().getCouleurAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CarteActive__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CarteActive__Group__0__Impl
	rule__CarteActive__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CarteActive__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCarteActiveAccess().getAlternatives_0()); }
	(rule__CarteActive__Alternatives_0)
	{ after(grammarAccess.getCarteActiveAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CarteActive__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CarteActive__Group__1__Impl
	rule__CarteActive__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CarteActive__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCarteActiveAccess().getCouleurKeyword_1()); }
	'-couleur-'
	{ after(grammarAccess.getCarteActiveAccess().getCouleurKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CarteActive__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CarteActive__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CarteActive__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCarteActiveAccess().getCouleurAssignment_2()); }
	(rule__CarteActive__CouleurAssignment_2)
	{ after(grammarAccess.getCarteActiveAccess().getCouleurAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnoDsl__ReglesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnoDslAccess().getReglesRegleJeuParserRuleCall_2_0()); }
		ruleRegleJeu
		{ after(grammarAccess.getUnoDslAccess().getReglesRegleJeuParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnoDsl__ReglesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnoDslAccess().getReglesRegleJeuParserRuleCall_3_1_0()); }
		ruleRegleJeu
		{ after(grammarAccess.getUnoDslAccess().getReglesRegleJeuParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegleJeuAccess().getNameSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getRegleJeuAccess().getNameSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__DescriptionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegleJeuAccess().getDescriptionSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getRegleJeuAccess().getDescriptionSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__ExigenceAssignment_3_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegleJeuAccess().getExigenceExigenceParserRuleCall_3_2_0_0()); }
		ruleExigence
		{ after(grammarAccess.getRegleJeuAccess().getExigenceExigenceParserRuleCall_3_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegleJeu__ExigenceAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegleJeuAccess().getExigenceExigenceParserRuleCall_3_3_0()); }
		ruleExigence
		{ after(grammarAccess.getRegleJeuAccess().getExigenceExigenceParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Expr1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExigenceAccess().getExpr1Expr1ParserRuleCall_0_0()); }
		ruleExpr1
		{ after(grammarAccess.getExigenceAccess().getExpr1Expr1ParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Linker1Assignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExigenceAccess().getLinker1Linker1ParserRuleCall_1_0()); }
		ruleLinker1
		{ after(grammarAccess.getExigenceAccess().getLinker1Linker1ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Linker2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExigenceAccess().getLinker2Linker2ParserRuleCall_2_0()); }
		ruleLinker2
		{ after(grammarAccess.getExigenceAccess().getLinker2Linker2ParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__CarteAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExigenceAccess().getCarteCarteParserRuleCall_3_0_0()); }
		ruleCarte
		{ after(grammarAccess.getExigenceAccess().getCarteCarteParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__CarteAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExigenceAccess().getCarteCarteParserRuleCall_3_1_1_0()); }
		ruleCarte
		{ after(grammarAccess.getExigenceAccess().getCarteCarteParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Linker3Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExigenceAccess().getLinker3Linker3ParserRuleCall_4_0()); }
		ruleLinker3
		{ after(grammarAccess.getExigenceAccess().getLinker3Linker3ParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exigence__Expr2Assignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExigenceAccess().getExpr2Expr2ParserRuleCall_5_0()); }
		ruleExpr2
		{ after(grammarAccess.getExigenceAccess().getExpr2Expr2ParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CarteClassique__NumeroCarteAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCarteClassiqueAccess().getNumeroCarteINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getCarteClassiqueAccess().getNumeroCarteINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CarteClassique__CouleurAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCarteClassiqueAccess().getCouleurCouleurCarteParserRuleCall_2_1_0()); }
		ruleCouleurCarte
		{ after(grammarAccess.getCarteClassiqueAccess().getCouleurCouleurCarteParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CarteActive__CouleurAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCarteActiveAccess().getCouleurCouleurCarteParserRuleCall_2_0()); }
		ruleCouleurCarte
		{ after(grammarAccess.getCarteActiveAccess().getCouleurCouleurCarteParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
